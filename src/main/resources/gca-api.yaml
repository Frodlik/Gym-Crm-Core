openapi: 3.0.3
info:
  title: GCA API
  description: API for managing trainees, their profiles, trainers, and training schedules
  version: '1.0'

servers:
  - url: http://localhost:8080/gym-crm-core/api/v1
    description: Local development server

paths:
  /trainees/register:
    post:
      tags:
        - Trainee
      summary: Register new trainee
      description: Registers a new trainee with basic information and generates username/password
      operationId: registerTrainee
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TraineeCreateRequest'
      responses:
        '200':
          description: Registration successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraineeCreateResponse'
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Username already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: Unexpected error

  /trainees/{username}:
    get:
      tags:
        - Trainee
      summary: Get trainee profile
      description: Retrieves detailed information about a trainee including assigned trainers
      operationId: getTraineeProfile
      parameters:
        - $ref: '#/components/parameters/Username'
      responses:
        '200':
          description: Trainee profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraineeGetResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Trainee not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: Unexpected error

    put:
      tags:
        - Trainee
      summary: Update trainee profile
      description: Updates trainee's personal information and activation status
      operationId: updateTraineeProfile
      parameters:
        - $ref: '#/components/parameters/Username'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TraineeUpdateRequest'
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraineeUpdateResponse'
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Trainee not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: Unexpected error

    delete:
      tags:
        - Trainee
      summary: Delete trainee profile
      description: Hard delete trainee profile with cascade deletion of related trainings
      operationId: deleteTraineeProfile
      parameters:
        - $ref: '#/components/parameters/Username'
      responses:
        '200':
          description: Trainee profile deleted successfully
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Trainee not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: Unexpected error

  /trainees/{username}/change-activation-status:
    patch:
      tags:
        - Authentication
      summary: Change trainee activation status
      description: Activates or deactivates a trainee profile
      operationId: changeTraineeActivationStatus
      parameters:
        - $ref: '#/components/parameters/Username'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivationStatusRequest'
      responses:
        '200':
          description: Activation status updated successfully
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Trainee not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: Unexpected error

  /trainees/{username}/available-trainers:
    get:
      tags:
        - Assignment
      summary: Get available trainers
      description: Retrieves list of active trainers not yet assigned to the trainee
      operationId: getAvailableTrainers
      parameters:
        - $ref: '#/components/parameters/Username'
      responses:
        '200':
          description: List of available trainers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailableTrainerGetResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Trainee not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: Unexpected error

  /trainees/{username}/trainers:
    put:
      tags:
        - Assignment
      summary: Update trainee's trainer list
      description: Updates the list of trainers assigned to a trainee
      operationId: updateTraineeTrainers
      parameters:
        - $ref: '#/components/parameters/Username'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TraineeAssignedTrainersUpdateRequest'
      responses:
        '200':
          description: Trainers list updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraineeAssignedTrainersUpdateResponse'
        '400':
          description: Invalid input data or trainer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Trainee not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: Unexpected error

  /trainees/{username}/trainings:
    get:
      tags:
        - Training
      summary: Get trainee's training schedule
      description: Retrieves trainee's training schedule with optional filtering
      operationId: getTraineeTrainings
      parameters:
        - $ref: '#/components/parameters/Username'
        - $ref: '#/components/parameters/FromDate'
        - $ref: '#/components/parameters/ToDate'
        - $ref: '#/components/parameters/TrainerName'
        - $ref: '#/components/parameters/TrainingType'
      responses:
        '200':
          description: List of trainings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TraineeTrainingGetResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Trainee not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: Unexpected error

components:
  parameters:
    Username:
      name: username
      in: path
      description: The username of the trainee
      required: true
      schema:
        type: string
        pattern: '^[a-zA-Z]+\.[a-zA-Z]+(\d+)?$'
        example: "billy.herrington"
    FromDate:
      name: fromDate
      in: query
      description: "Filter trainings from this date (format: yyyy-MM-dd)"
      required: false
      schema:
        type: string
        format: date
        example: "2025-07-14"
    ToDate:
      name: toDate
      in: query
      description: "Filter trainings to this date (format: yyyy-MM-dd)"
      required: false
      schema:
        type: string
        format: date
        example: "2025-07-31"
    TrainerName:
      name: trainerName
      in: query
      description: Filter by trainer's first name
      required: false
      schema:
        type: string
        example: "Eren"
    TrainingType:
      name: trainingType
      in: query
      description: Filter by training type name
      required: false
      schema:
        type: string
        example: "Cardio"

  schemas:
    User:
      type: object
      required:
        - firstName
        - lastName
      properties:
        firstName:
          type: string
          description: First name
          maxLength: 50
          example: "Billy"
        lastName:
          type: string
          description: Last name
          maxLength: 50
          example: "Herrington"
    Trainee:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          properties:
            dateOfBirth:
              type: string
              format: date
              description: "Date of birth (format: yyyy-MM-dd)"
              example: "2000-03-22"
            address:
              type: string
              description: Contact address
              maxLength: 200
              example: "123 Main St"
    TraineeCreateRequest:
      $ref: '#/components/schemas/Trainee'
    TraineeCreateResponse:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          description: Generated unique username
          example: "billy.herrington"
        password:
          type: string
          description: Generated secure password
          example: "secure-password"
    TraineeGetResponse:
      allOf:
        - $ref: '#/components/schemas/Trainee'
        - type: object
          properties:
            isActive:
              type: boolean
              description: Indicates if the trainee is active
            trainers:
              type: array
              description: List of assigned trainers
              items:
                type: object
                required:
                  - username
                  - firstName
                  - lastName
                  - specialization
                properties:
                  username:
                    type: string
                    description: Trainer's username
                  firstName:
                    type: string
                    description: Trainer's first name
                  lastName:
                    type: string
                    description: Trainer's last name
                  specialization:
                    type: string
                    description: Trainer's specialization (training type)
      example:
        firstName: "Billy"
        lastName: "Herrington"
        dateOfBirth: "2000-03-22"
        address: "123 Main St"
        isActive: true
        trainers:
          - username: "ricardo.milos"
            firstName: "Ricardo"
            lastName: "Milos"
            specialization: "Yoga"
          - username: "eren.yeager"
            firstName: "Eren"
            lastName: "Yeager"
            specialization: "Cardio"
    TraineeUpdateRequest:
      allOf:
        - $ref: '#/components/schemas/Trainee'
        - type: object
          required:
            - isActive
          properties:
            isActive:
              type: boolean
              description: Indicates if the trainee is active
              example: false
      example:
        firstName: "Jason"
        lastName: "Statham"
        dateOfBirth: "1967-07-26"
        address: "456 Action Ave, London"
        isActive: false
    TraineeUpdateResponse:
      allOf:
        - $ref: '#/components/schemas/Trainee'
        - type: object
          properties:
            username:
              type: string
              description: Trainee's username
            isActive:
              type: boolean
              description: Indicates if the trainee is active
            trainers:
              type: array
              description: List of assigned trainers
              items:
                type: object
                required:
                  - username
                  - firstName
                  - lastName
                  - specialization
                properties:
                  username:
                    type: string
                    description: Trainer's username
                  firstName:
                    type: string
                    description: Trainer's first name
                  lastName:
                    type: string
                    description: Trainer's last name
                  specialization:
                    type: string
                    description: Trainer's specialization (training type)
      example:
        username: "jason.statham"
        firstName: "Jason"
        lastName: "Statham"
        dateOfBirth: "1967-07-26"
        address: "456 Action Ave, London"
        isActive: false
        trainers:
          - username: "ricardo.milos"
            firstName: "Ricardo"
            lastName: "Milos"
            specialization: "Yoga"
          - username: "eren.yeager"
            firstName: "Eren"
            lastName: "Yeager"
            specialization: "Cardio"
    ActivationStatusRequest:
      type: object
      required:
        - isActive
      properties:
        isActive:
          type: boolean
          description: New activation status
          example: true
    TraineeAssignedTrainersUpdateRequest:
      type: object
      required:
        - trainerUsernames
      properties:
        trainerUsernames:
          type: array
          description: List of trainer usernames to assign
          items:
            type: string
            pattern: '^[a-zA-Z]+\.[a-zA-Z]+(\d+)?$'
          example: ["ricardo.milos", "eren.yeager"]
          minItems: 1
    TraineeAssignedTrainersUpdateResponse:
      type: array
      description: List of updated trainers
      items:
        type: object
        required:
          - username
          - firstName
          - lastName
          - specialization
        properties:
          username:
            type: string
            description: Trainer's username
          firstName:
            type: string
            description: Trainer's first name
          lastName:
            type: string
            description: Trainer's last name
          specialization:
            type: string
            description: Trainer's specialization
      example:
        - username: "ricardo.milos"
          firstName: "Ricardo"
          lastName: "Milos"
          specialization: "Yoga"
        - username: "eren.yeager"
          firstName: "Eren"
          lastName: "Yeager"
          specialization: "Cardio"
    Trainer:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          required:
            - specialization
          properties:
            firstName:
              type: string
              description: Trainer's first name
              example: "Ricardo"
            lastName:
              type: string
              description: Trainer's last name
              example: "Milos"
            specialization:
              type: string
              description: Trainer's specialization (training type)
              example: "Yoga"
    AvailableTrainerGetResponse:
      allOf:
        - $ref: '#/components/schemas/Trainer'
        - type: object
          required:
            - username
          properties:
            username:
              type: string
              description: Trainer's username
      example:
        username: "ricardo.milos"
        firstName: "Ricardo"
        lastName: "Milos"
        specialization: "Yoga"
    TraineeTrainingGetResponse:
      type: object
      required:
        - trainingName
        - trainingDate
        - trainingType
        - trainingDuration
        - trainerName
      properties:
        trainingName:
          type: string
          description: Name of the training session
          example: "Strength Training"
        trainingDate:
          type: string
          format: date
          description: Date of the training session
          example: "2025-07-01"
        trainingType:
          type: string
          description: Type of training
          example: "Cardio"
        trainingDuration:
          type: integer
          description: Duration of training in minutes
          minimum: 1
          example: 60
        trainerName:
          type: string
          description: Name of the trainer
          example: "Eren"
    ErrorResponse:
      type: object
      required:
        - errorCode
        - errorMessage
      properties:
        errorCode:
          type: integer
          description: Unique identifier for the error type
          example: 2760
        errorMessage:
          type: string
          description: Human-readable description of the error
          example: "An error occurred while processing the request: error message"

  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      description: Basic authentication using username and password

security:
  - basicAuth: []